

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>memorymeld's blog</title>
  <subtitle>A blog focused on reverse engineering, exploit development, and red team concepts</subtitle>
  <updated>2023-11-24T02:15:05+01:00</updated>
  <author>
    <name></name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <rights> © 2023  </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Ghidra Scripting - XRefs and Decompilation</title>
    <link href="http://localhost:4000/ghidra-scripting-xrefs/" rel="alternate" type="text/html" title="Ghidra Scripting - XRefs and Decompilation" />
    <published>2023-11-14T00:00:00+01:00</published>
  
    <updated>2023-11-24T01:48:05+01:00</updated>
  
    <id>http://localhost:4000/ghidra-scripting-xrefs/</id>
    <content src="http://localhost:4000/ghidra-scripting-xrefs/" />
    <author>
      <name></name>
    </author>

  
    
    <category term="Linux" />
    
  

  
    <summary>
      





      Hello everyone,

I’m excited to share the recent experiments I’ve been conducting with Ghidra scripting. The capabilities of Ghidra’s decompiler and scripting tools truly stand out, surpassing what other disassemblers offer. Ghidra’s headless mode particularly empowers researchers, granting the ability to extract essential information from binaries via the command line. The process of individua...
    </summary>
  

  </entry>

  
  <entry>
    <title>Angr Overflow Analysis</title>
    <link href="http://localhost:4000/angr-full-binary/" rel="alternate" type="text/html" title="Angr Overflow Analysis" />
    <published>2023-11-12T00:00:00+01:00</published>
  
    <updated>2023-11-24T01:48:05+01:00</updated>
  
    <id>http://localhost:4000/angr-full-binary/</id>
    <content src="http://localhost:4000/angr-full-binary/" />
    <author>
      <name></name>
    </author>

  
    
    <category term="Linux" />
    
  

  
    <summary>
      





      Hello everyone,

I wanted to share my recent experience using Angr to detect overflows in binaries. I’ve dedicated several late nights to crafting an Angr script capable of identifying these overflows and now I’m eager to share my findings. My quest has been to explore alternative methods for analyzing binaries for memory corruption. From my experience, automated static analyzers have proven un...
    </summary>
  

  </entry>

</feed>


